using Unity.VisualScripting;
using UnityEngine;
using UnityEngine.UI;

public class SoundSetting : MonoBehaviour
{
    [Header("üéµ AudioSource Object")]
    public GameObject GameAudioObject;
    public GameObject PlayerAudioObject;

    [Header("üéöÔ∏è UI Slider")]
    [Tooltip("‡∏•‡∏≤‡∏Å Slider ‡∏°‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà")]
    public Slider GameAudioSlider;
    [Tooltip("‡∏•‡∏≤‡∏Å Slider ‡∏°‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà")]
    public Slider PlayerAudioSlider;

    [Header("Scriptable Object")]
    [Tooltip("‡πÄ‡∏≠‡∏≤‡∏°‡∏≤‡∏à‡∏≤‡∏Å scripts/Settings/ManagerValue.cs")]
    public ManagerValue managerValue;

    private AudioSource GameAudioSource;
    private AudioSource PlayerAudioSource;

    void Awake()
    {
        GameAudioSource = GameAudioObject.GetComponent<AudioSource>();
        PlayerAudioSource = PlayerAudioObject.GetComponent<AudioSource>();
    }
    
    void Start()
    {
        // set ‡πÉ‡∏´‡πâ slider ‡∏°‡∏µ value ‡πÄ‡∏ó‡πà‡∏≤‡πÉ‡∏ô managerValue
        GameAudioSlider.value = managerValue.gameSound;
        PlayerAudioSlider.value = managerValue.playerSound;

        // set ‡πÉ‡∏´‡πâ AudioSource ‡∏°‡∏µ value ‡πÄ‡∏ó‡πà‡∏≤‡πÉ‡∏ô managerValue
        GameAudioSource.volume = managerValue.gameSound;
        PlayerAudioSource.volume = managerValue.playerSound;

        GameAudioSlider.onValueChanged.AddListener(GameVolumeChanged);
        PlayerAudioSlider.onValueChanged.AddListener(PlayerVolumeChanged);
    }

    private void PlayerVolumeChanged(float value)
    {
        if (PlayerAudioSource != null)
        {
            PlayerAudioSource.volume = value; // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡πà‡∏≤ volume
            managerValue.playerSound = value; // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡πà‡∏≤ managerValue
        }
    }

    private void GameVolumeChanged(float value)
    {
        if (GameAudioSource != null)
        {
            GameAudioSource.volume = value;
            managerValue.gameSound = value;
        }
    }
}
